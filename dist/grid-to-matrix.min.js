!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):e.gridToMatrix=t()}(this,function(){function e(t,r,o){var n,i,u,f,a,l,y,p,c,s,g=0,h=0,m="FeatureCollection"===t.type,d="Feature"===t.type,w=m?t.features.length:1;for(n=0;w>n;n++)for(c=m?t.features[n].geometry:d?t.geometry:t,s="GeometryCollection"===c.type,y=s?c.geometries.length:1,f=0;y>f;f++)if(l=s?c.geometries[f]:c,p=l.coordinates,g=!o||"Polygon"!==l.type&&"MultiPolygon"!==l.type?0:1,"Point"===l.type)r(p,h),h++;else if("LineString"===l.type||"MultiPoint"===l.type)for(i=0;i<p.length;i++)r(p[i],h),h++;else if("Polygon"===l.type||"MultiLineString"===l.type)for(i=0;i<p.length;i++)for(u=0;u<p[i].length-g;u++)r(p[i][u],h),h++;else if("MultiPolygon"===l.type)for(i=0;i<p.length;i++)for(u=0;u<p[i].length;u++)for(a=0;a<p[i][u].length-g;a++)r(p[i][u][a],h),h++;else{if("GeometryCollection"!==l.type)throw new Error("Unknown Geometry Type");for(i=0;i<l.geometries.length;i++)e(l.geometries[i],r,o)}}function t(t,r,o,n){var i=o;return e(t,function(e,t){i=0===t&&void 0===o?e:r(i,e,t)},n),i}function r(e,t){var r;switch(e.type){case"FeatureCollection":for(r=0;r<e.features.length;r++)t(e.features[r].properties,r);break;case"Feature":t(e.properties,0)}}function o(e,t,o){var n=o;return r(e,function(e,r){n=0===r&&void 0===o?e:t(n,e,r)}),n}function n(e,t){if("Feature"===e.type)t(e,0);else if("FeatureCollection"===e.type)for(var r=0;r<e.features.length;r++)t(e.features[r],r)}function i(e,t,r){var o=r;return n(e,function(e,n){o=0===n&&void 0===r?e:t(o,e,n)}),o}function u(t){var r=[];return e(t,function(e){r.push(e)}),r}function f(e,t){var r,o,n,i,u,f,a,l=0,y="FeatureCollection"===e.type,p="Feature"===e.type,c=y?e.features.length:1;for(r=0;c>r;r++)for(f=y?e.features[r].geometry:p?e.geometry:e,a="GeometryCollection"===f.type,u=a?f.geometries.length:1,n=0;u>n;n++)if(i=a?f.geometries[n]:f,"Point"===i.type||"LineString"===i.type||"MultiPoint"===i.type||"Polygon"===i.type||"MultiLineString"===i.type||"MultiPolygon"===i.type)t(i,l),l++;else{if("GeometryCollection"!==i.type)throw new Error("Unknown Geometry Type");for(o=0;o<i.geometries.length;o++)t(i.geometries[o],l),l++}}function a(e,t,r){var o=r;return f(e,function(e,n){o=0===n&&void 0===r?e:t(o,e,n)}),o}function l(e){if(!e)throw new Error("No obj passed");var t=y(e);if(t.length>1&&"number"==typeof t[0]&&"number"==typeof t[1])return t;throw new Error("Coordinate is not a valid Point")}function y(e){if(!e)throw new Error("No obj passed");var t;if(e.length?t=e:e.coordinates?t=e.coordinates:e.geometry&&e.geometry.coordinates&&(t=e.geometry.coordinates),t)return p(t),t;throw new Error("No valid coordinates")}function p(e){if(e.length>1&&"number"==typeof e[0]&&"number"==typeof e[1])return!0;if(Array.isArray(e[0])&&e[0].length)return p(e[0]);throw new Error("coordinates must only contain numbers")}function c(e,t,r){if(!t||!r)throw new Error("type and name required");if(!e||e.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.type)}function s(e,t,r){if(!e)throw new Error("No feature passed");if(!r)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!e.geometry||e.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.geometry.type)}function g(e,t,r){if(!e)throw new Error("No featureCollection passed");if(!r)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+r+", FeatureCollection required");for(var o=0;o<e.features.length;o++){var n=e.features[o];if(!n||"Feature"!==n.type||!n.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!n.geometry||n.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+n.geometry.type)}}function h(e,t){var r={};v(e,function(e){var t=w(e)[1];r[t]||(r[t]=[]),r[t].push(e)});var o=Object.keys(r).map(function(e){var t=r[e],o=t.sort(function(e,t){return w(e)[0]-w(t)[0]});return o}),n=o.sort(function(e,r){return t?w(e[0])[1]-w(r[0])[1]:w(r[0])[1]-w(e[0])[1]});return n}var m={coordEach:e,coordReduce:t,propEach:r,propReduce:o,featureEach:n,featureReduce:i,coordAll:u,geomEach:f,geomReduce:a},d={geojsonType:c,collectionOf:g,featureOf:s,getCoord:l,getCoords:y,containsNumber:p},w=d.getCoords,v=m.featureEach,E=d.collectionOf,C=function(e,t,r,o){E(e,"Point","input must contain Points"),t=t||"elevation";for(var n=h(e,r),i=[],u=0;u<n.length;u++){for(var f=n[u],a=[],l=0;l<f.length;l++){var y=f[l];a.push(y.properties[t]?y.properties[t]:0),o===!0&&(y.properties.matrixPosition=[u,l])}i.push(a)}return i};return C});